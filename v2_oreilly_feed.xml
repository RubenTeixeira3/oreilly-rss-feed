<?xml version='1.0' encoding='utf-8'?>
<rss version="2.0"><channel><title>O'Reilly - Recent Software Development Courses</title><link>https://learning.oreilly.com/</link><description>Latest software development courses from O'Reilly Online Learning.</description><lastBuildDate>Fri, 10 Oct 2025 09:09:16 GMT</lastBuildDate><item><title>Software Engineering at Google</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/9781492082781/</link><description>&lt;span&gt;&lt;div&gt;&lt;p&gt;Today, software engineers need to know not only how to program effectively but also how to develop proper engineering practices to make their codebase sustainable and healthy. This book emphasizes this difference between programming and software engineering.
&lt;/p&gt;&lt;p&gt;
How can software engineers manage a living codebase that evolves and responds to changing requirements and demands over the length of its life? Based on their experience at Google, software engineers Titus Winters and Hyrum Wright, along with technical writer Tom Manshreck, present a candid and insightful look at how some of the world's leading practitioners construct and maintain software. This book covers Google's unique engineering culture, processes, and tools and how these aspects contribute to the effectiveness of an engineering organization.
&lt;/p&gt;&lt;p&gt;
You'll explore three fundamental principles that software organizations should keep in mind when designing, architecting, writing, and maintaining code:
&lt;/p&gt;&lt;ul&gt;&lt;li&gt;How time affects the sustainability of software and how to make your code resilient over time
&lt;/li&gt;&lt;li&gt;How scale affects the viability of software practices within an engineering organization
&lt;/li&gt;&lt;li&gt;What trade-offs a typical engineer needs to make when evaluating design and development decisions
&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/span&gt;</description><pubDate>2020-03-03T00:00:00Z</pubDate></item><item><title>Balancing Coupling in Software Design: Universal Design Principles for Architecting Modular Software Systems</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/9780137353514/</link><description>&lt;span&gt;&lt;div&gt;&lt;p&gt;&lt;strong&gt;Learn How Coupling Impacts Every Software Design Decision You Make--and How to Control It&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If you want to build modular, evolvable, and resilient software systems, you have to get coupling right. Every design decision you make influences coupling, which in turn shapes the design options available to you. Despite its importance, coupling often doesn't receive the attention it deserves--until now.&lt;/p&gt;&lt;p&gt;Since the dawn of software engineering, it's been clear that proper management of coupling is essential for architecting modular software systems. This topic has been extensively researched over the years, but some of that knowledge has been forgotten, and some of it is challenging to apply in this day and age. In &lt;em&gt;&lt;strong&gt;Balancing Coupling in Software Design&lt;/strong&gt;&lt;/em&gt;, author Vlad Khononov has built a model that not only draws on this accumulated knowledge, but also adapts it to modern software engineering practices, offering a fresh perspective on modular software design.&lt;/p&gt;&lt;p&gt;With principles grounded in practice, Vlad teaches you not only to navigate the multi-dimensional nature of coupling but also to use coupling as a tool for managing complexity and increasing modularity. And who knows, maybe this book will change the way you think about software design as whole.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Defines the concept of coupling and the role it plays in system design and architecture&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Explains how coupling can both increase complexity and foster modularity of a system&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Introduces a holistic model that turns coupling into a tool for designing modular software&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Shows how to evolve design decisions to support continuous growth of software systems&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Illustrates the discussed principles with detailed examples based on real-life case studies&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;em&gt;"Coupling is one of those words that is used a lot, but little understood. Vlad propels us from simplistic slogans like 'always decouple components' to a nuanced discussion of coupling in the context of complexity and software evolution. If you build modern software, read this book!"&lt;/em&gt;&lt;/p&gt;&lt;p&gt;--&lt;strong&gt;Gregor Hohpe&lt;/strong&gt;, author of &lt;em&gt;The Software Architect Elevator&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Register your book for convenient access to downloads, updates, and/or corrections as they become available. See inside book for details.&lt;/em&gt;&lt;/p&gt;&lt;p&gt;.&lt;/p&gt;&lt;/div&gt;&lt;/span&gt;</description><pubDate>2023-10-28T00:00:00Z</pubDate></item><item><title>Software Development Superstream: Generative AI to Improve Software Development</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/0642572008390/</link><description>&lt;span&gt;&lt;div&gt;&lt;p&gt;&lt;b&gt;Sponsored by Tabnine&lt;/b&gt;&lt;/p&gt;&lt;p&gt;ChatGPT and similar tools have made their mark on software development. Understanding how to work with generative AI is now a core skill for almost every software developer.&lt;/p&gt;&lt;p&gt;Join us to discover how to use generative AI to benefit the software development lifecycle. You’ll explore available AI tools that can help with common development skills—including code generation and auto-completion, bug detection and code review, automated testing, UI and UX, performance, and documentation—then learn how to incorporate these tools into your workflow.&lt;/p&gt;&lt;p&gt;&lt;b&gt;What you’ll learn and how you can apply it&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Put AI-assisted code generation in context and consider the caveats that come with using these tools and the proper checks and guardrails to have in place&lt;/li&gt;&lt;li&gt;Some practical solutions for using the latest state-of-the-art models in real-world applications and distilling their knowledge into smaller and faster components that you can run and maintain in-house&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;This live course is for you because...&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;You’re a developer who wants to find your skills gaps with generative AI tools and upskill to use these time-saving tools.&lt;/li&gt;&lt;li&gt;You want to learn how to choose between AI models and integrate generative AI into all parts of the SDLC.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Recommended follow-up:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Read &lt;a href="https://learning.oreilly.com/library/view/generative-ai-for/9781098162269/" target="_blank"&gt;&lt;em&gt;Generative AI for Software Development&lt;/em&gt;&lt;/a&gt; (early release book)&lt;/li&gt;&lt;li&gt;Read &lt;a href="https://learning.oreilly.com/library/view/ai-assisted-programming/9781098164553/" target="_blank"&gt;&lt;em&gt;AI-Assisted Programming&lt;/em&gt;&lt;/a&gt; (book)&lt;/li&gt;&lt;li&gt;Watch &lt;a href="https://learning.oreilly.com/course/generative-ai-for/0636920934394/" target="_blank"&gt;&lt;em&gt;Generative AI for Developers: Creating Apps with the ChatGPT API&lt;/em&gt;&lt;/a&gt; (on-demand course)&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/span&gt;</description><pubDate>2024-10-02T00:00:00Z</pubDate></item><item><title>Righting Software</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/9780136524007/</link><description>&lt;span&gt;&lt;div&gt;&lt;p&gt;&lt;strong&gt;Right Your Software and Transform Your Career&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Righting Software&lt;/strong&gt;&lt;/em&gt; presents the proven, structured, and highly engineered approach to software design that renowned architect Juval Löwy has practiced and taught around the world. Although companies of every kind have successfully implemented his original design ideas across hundreds of systems, these insights have never before appeared in print.&lt;/p&gt;&lt;p&gt;Based on first principles in software engineering and a comprehensive set of matching tools and techniques, Löwy’s methodology integrates system design and project design. First, he describes the primary area where many software architects fail and shows how to decompose a system into smaller building blocks or services, based on volatility. Next, he shows how to flow an effective project design from the system design; how to accurately calculate the project duration, cost, and risk; and how to devise multiple execution options.&lt;/p&gt;&lt;p&gt;The method and principles in &lt;em&gt;&lt;strong&gt;Righting Software&lt;/strong&gt;&lt;/em&gt; apply regardless of your project and company size, technology, platform, or industry. Löwy starts the reader on a journey that addresses the critical challenges of software development today by righting software systems and projects as well as careers–and possibly the software industry as a whole. Software professionals, architects, project leads, or managers at any stage of their career will benefit greatly from this book, which provides guidance and knowledge that would otherwise take decades and many projects to acquire.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Register your book for convenient access to downloads, updates, and/or corrections as they become available. See inside book for details.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/span&gt;</description><pubDate>2019-12-10T00:00:00Z</pubDate></item><item><title>Follow the Money</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/9798341661349/</link><description>&lt;span&gt;&lt;div&gt;&lt;p&gt;Why do great engineers and team leads stumble when scaling up? Why do thriving businesses fumble large-scale technical transformations? At its core, a business is a way of managing how money enters, circulates, and leaves an organization. Yet most software engineers stick to code and architecture, overlooking the financial and organizational structures that underpin their work.&lt;/p&gt;&lt;p&gt;This book looks at technical delivery using the lens of "money flows." Building on Conway's law, which states that organizations' products tend to reflect their own communication structures, &lt;em&gt;Follow the Money&lt;/em&gt; argues that those communication structures are themselves molded by money flows. Understanding how money actually moves in your organization will give you the knowledge to revamp ineffective financial structures to fix the organizational problems that are holding you back.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Use systems thinking to tease out the significant feedback loops in your organization&lt;/li&gt;&lt;li&gt;Explain the core key financial concepts every technical leader needs to succeed&lt;/li&gt;&lt;li&gt;Identify (and correct) funding patterns that stifle innovation or encourage technical debt&lt;/li&gt;&lt;li&gt;Apply an easy-to-use framework to analyze your organization from customer (or "patron,") down to lines of code&lt;/li&gt;&lt;li&gt;Learn the mysterious arts of aligning financial strategy with your technical delivery&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/span&gt;</description><pubDate>2026-12-25T00:00:00Z</pubDate></item><item><title>The Nature of Software Development</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/9781680500721/</link><description>&lt;span&gt;&lt;div&gt;&lt;p&gt;You need to get value from your software project. You need it "free, now, and perfect." We can't get you there, but we can help you get to "cheaper, sooner, and better." This book leads you from the desire for value down to the specific activities that help good Agile projects deliver better software sooner, and at a lower cost. Using simple sketches and a few words, the author invites you to follow his path of learning and understanding from a half century of software development and from his engagement with Agile methods from their very beginning.&lt;/p&gt;&lt;p&gt;The book describes software development, starting from our natural desire to get something of value. Each topic is described with a picture and a few paragraphs. You're invited to think about each topic; to take it in. You'll think about how each step into the process leads to the next. You'll begin to see why Agile methods ask for what they do, and you'll learn why a shallow implementation of Agile can lead to only limited improvement.&lt;/p&gt;&lt;p&gt;This is not a detailed map, nor a step-by-step set of instructions for building the perfect project. There is no map or instructions that will do that for you.&lt;/p&gt;&lt;p&gt;You need to build your own project, making it a bit more perfect every day. To do that effectively, you need to build up an understanding of the whole process.&lt;/p&gt;&lt;p&gt;This book points out the milestones on your journey of understanding the nature of software development done well. It takes you to a location, describes it briefly, and leaves you to explore and fill in your own understanding.&lt;/p&gt;&lt;p&gt;&lt;b&gt;What You Need:&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;You'll need your Standard Issue Brain, a bit of curiosity, and a desire to build your own understanding rather than have someone else's detailed ideas poured into your head.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/span&gt;</description><pubDate>2015-02-19T00:00:00Z</pubDate></item><item><title>OSCON Open Source Software Superstream Series: Live Coding—Go, Rust, and Python</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/0636920455653/</link><description>&lt;span&gt;&lt;div&gt;&lt;a href="https://learning.oreilly.com/videos/oscon-open-source/0636920458838"&gt;Watch Part 2, OSCON Open Source Software Superstream Series: Cloud Strategies and Implementation.&lt;/a&gt;&lt;a href="https://learning.oreilly.com/videos/oscon-open-source/0636920469735"&gt;Watch Part 3, OSCON Open Source Software Superstream Series: Infrastructure.&lt;/a&gt;&lt;p&gt;This three-part series of half-day online events gives attendees an overarching perspective of software development from which to make decisions that strengthen and grow companies and industries, a deep knowledge of key open source technologies to make it happen, and a community in which both they and their companies can thrive.&lt;/p&gt;&lt;p&gt;In Part 1, Live Coding—Go, Rust, and Python, we wanted to get deeper into actual coding, and one way to do that was to outlaw slides. That’s right, these sessions all incorporate live-coding. These four sessions from Ellen Körbes, John Walicki, Nathan Stocks, and Reuven Lerner will walk you through coding best practices and new ways of getting the most out of languages like Python, Go, and Rust. &lt;/p&gt;&lt;p&gt;This event is sponsored by IBM, and features spotlights on Kode With Klossy and the Eclipse Foundation.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h4&gt;About the presenters:&lt;/h4&gt;&lt;p&gt;&lt;b&gt;Rachel Roumeliotis&lt;/b&gt; is vice president of content strategy at O'Reilly, where she leads an editorial team that covers a wide variety of programming topics ranging from full stack to open source in the enterprise to emerging programming languages. She’s been a programming chair for the O'Reilly OSCON, Fluent, Strata, Software Architecture, and Security Conferences. She’s currently the programming chair for the OSCON and Strata Data &amp;amp; AI Superstream Series on O'Reilly online learning. She's been working in technical publishing for 10 years, acquiring content in many areas including mobile programming, UX, computer security, and AI.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Kelsey Hightower&lt;/b&gt; has worn every hat possible throughout his career in tech and enjoys leadership roles focused on making things happen and shipping software. Kelsey is a strong open source advocate focused on building simple tools that make people smile. When he isn’t slinging Go code, you can catch him giving technical workshops covering everything from programming to system administration.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Ellen Körbes&lt;/b&gt; ran DevRel at both Tilt and Garden—two of the very few companies 100% focused on the development experience side of Kubernetes. They got their start building Kubernetes CLI tooling under SIG-CLI. They've since spoken about Go and Kubernetes at many world-famous events.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Tara Tran&lt;/b&gt; is the manager of recruitment and instruction, and &lt;b&gt;Mehreen Butt&lt;/b&gt; is an instructor at Kode With Klossy.&lt;/p&gt;&lt;p&gt;&lt;b&gt;John Walicki&lt;/b&gt; is the CTO for edge/IoT advocacy in the Developer Ecosystem Group within the IBM Cognitive Applications Group, where he helps developers create custom IoT and embedded Linux solutions for their industrial and educational use cases. As an IBM developer advocate with deep expertise in IoT and edge, he inspires developers to build solutions with the powerful Watson IoT capabilities, Watson AI and IBM Cloud.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Nathan Stocks&lt;/b&gt; is an engineering manager of Git storage at GitHub by day; by night he teaches Rust and works on indie game dev projects. He likes maple trees, frisbee, spending time with his wife and kids, eating food, and dreaming about running his own artisan software shop with a small team of smart, happy people.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Mike Milinkovich&lt;/b&gt; is the executive director of the Eclipse Foundation.&lt;/p&gt;&lt;p&gt;&lt;b&gt;Reuven Lerner&lt;/b&gt; is a full-time Python trainer and author. Reuven’s free weekly Better Developers newsletter, about Python and software engineering, is read by more than 15,000 developers around the globe. His Trainer Weekly newsletter is similarly popular among people who give corporate training.&lt;/p&gt;&lt;/div&gt;&lt;/span&gt;</description><pubDate>2020-06-24T00:00:00Z</pubDate></item><item><title>Working with Coders: A Guide to Software Development for the Perplexed Non-Techie</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/9781484227008/</link><description>&lt;span&gt;&lt;p&gt;Get introduced to the fascinating world inhabited by the professional software developer. Aimed at a non-technical audience, this book aims to de-obfuscate the jargon, explain the various activities that coders undertake, and analyze the specific pressures, priorities, and preoccupations that developers are prone to. In each case it offers pragmatic advice on how to use this knowledge to make effective business decisions and work productively with software teams.&lt;/p&gt;&lt;p&gt;Software projects are, all too often, utter nightmares for everyone involved. Depending on which study you read, between 60 and 90 percent of all software projects are completed late, run over budget, or deliver an inferior quality end product. This blight affects everyone from large organizations trying to roll out business change to tiny startups desperately trying to launch their MVP before the money runs out. While there has been much attention devoted to understanding these failings, leading to the development of entire management methodologies aimed at reducing the failure rate, such new processes have had, at best, limited success in delivering better results.&lt;/p&gt;&lt;p&gt;Based on a decade spent exploring the world of software, Patrick Gleeson argues that the underlying reason for the high failure rate of software projects is that software development, being a deeply arcane and idiosyncratic process, tends to be thoroughly and disastrously misunderstood by managers and leaders. So long as the people tasked with making decisions about software projects are unaware of these idiosyncrasies and their ramifications, software projects will be delivered late, software products will be unfit for purpose, and relations between software developers and their non-technical colleagues will be strained. Even the most potent modern management tools are ineffective when wielded blindly.&lt;/p&gt;&lt;p&gt;To anyone who employs, contracts, manages, or works with software developers, &lt;i&gt;Working with Coders: A Guide to Software Development for the Perplexed Non-Techie&lt;/i&gt; delivers the understanding necessary to reduce friction and inefficiencies at the intersection between software development teams and their non-technical colleagues.&lt;/p&gt;&lt;p&gt;&lt;b&gt;What You'll Learn:&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Discover why software projects are so commonly delivered late and with an abysmal end product&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Examine why the relationship between coders and their non-technical colleagues is often strained&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Understand how the software development process works and how to support it effectively&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Decipher and use the jargon of software development&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Keep a team of coders happy and improve the odds of successful software project delivery&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;Who This Book Is For&lt;/b&gt;&lt;/p&gt;&lt;p&gt;Anyone who employs, contracts, or manages software developers—such as tech startup CEOs, project managers, and clients of digital agencies—and wishes the relationship were easier and more productive. The secondary readership is software developers who want to find ways of working more effectively as part of a team.&lt;/p&gt;&lt;/span&gt;</description><pubDate>2017-07-05T00:00:00Z</pubDate></item><item><title>Seriously Good Software video edition</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/9781617296291VE/</link><description>&lt;span&gt;&lt;h5&gt;In Video Editions the narrator reads the book while the content, figures, code listings, diagrams, and text appear on the screen. Like an audiobook that you can also watch as a video.&lt;/h5&gt;&lt;br&gt; &lt;i&gt;Building high-quality software is never simple, and it is always a good idea to reexamine the principles of good design and craftsmanship. In this book, you will find a fresh perspective that I hope you will enjoy as much as I did.&lt;/i&gt;&lt;br&gt;
From the Foreword by Cay Horstmann, author of Big Java, Core Java, and many other titles&lt;br&gt;&lt;br&gt;
&lt;p&gt;Serious developers know that code can always be improved. With each iteration, you make optimizations—small and large—that can have a huge impact on your application’s speed, size, resilience, and maintainability.&lt;/p&gt;
&lt;p&gt;In &lt;b&gt;Seriously Good Software: Code that Works, Survives, and Wins&lt;/b&gt;, author, teacher, and Java expert Marco Faella teaches you techniques for writing better code. You’ll start with a simple application and follow it through seven careful refactorings, each designed to explore another dimension of quality.&lt;/p&gt;
&lt;h3&gt;about the technology&lt;/h3&gt;
&lt;p&gt;Great code blends the skill of a programmer with the time-tested techniques and best practices embraced by the entire development community. Although each application has its own context and character, some dimensions of quality are always important. This book concentrates on seven pillars of seriously good software: speed, memory usage, reliability, readability, thread safety, generality, and elegance. The Java-based examples demonstrate techniques that apply to any OO language.&lt;/p&gt;
&lt;h3&gt;about the book&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Seriously Good Software&lt;/b&gt; is a handbook for any professional developer serious about improving application quality. It explores fundamental dimensions of code quality by enhancing a simple implementation into a robust, professional-quality application. Questions, exercises, and Java-based examples ensure you’ll get a firm grasp of the concepts as you go. When you finish the last version of the book’s central project, you’ll be able to confidently choose the right optimizations for your code.&lt;/p&gt;
&lt;h3&gt;what's inside&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Evaluating software qualities
&lt;/li&gt;&lt;li&gt;Assessing trade-offs and interactions
&lt;/li&gt;&lt;li&gt;Fulfilling different objectives in a single task
&lt;/li&gt;&lt;li&gt;Java-based exercises you can apply in any OO language
&lt;/li&gt;&lt;/ul&gt;
&lt;h3&gt;about the audience&lt;/h3&gt;
For developers with basic object-oriented programming skills and intermediate Java skills.
&lt;h3&gt;about the author&lt;/h3&gt;
&lt;b&gt;Marco Faella&lt;/b&gt; teaches advanced programming at a major Italian university. His published work includes peer-reviewed research articles, a Java certification manual, and a video course.
&lt;br&gt;&lt;br&gt;
&lt;i&gt;A practical guide to writing better software.&lt;/i&gt;&lt;br&gt;
Juan J. Durillo, LRZ SuperMUC&lt;br&gt;&lt;br&gt;
&lt;i&gt;Absolute must-have for every computer science student!&lt;/i&gt;&lt;br&gt;
Michał Ambroziewicz, Netsprint&lt;br&gt;&lt;br&gt;
&lt;i&gt;This book should be a must-read for every new developer in any company.&lt;/i&gt;&lt;br&gt;
Flavio Diez, codecentric AG&lt;br&gt;&lt;br&gt;
NARRATED BY MARK THOMAS&lt;/span&gt;</description><pubDate>2020-03-20T00:00:00Z</pubDate></item><item><title>Peopleware: Productive Projects and Teams, Third Edition</title><link>https://learning.oreilly.comhttps://learning.oreilly.com/api/v1/book/9780133440706/</link><description>&lt;span&gt;&lt;p&gt;Few books in computing have had as profound an influence on software management as &lt;i&gt;&lt;b&gt;Peopleware&lt;/b&gt;&lt;/i&gt;. The unique insight of this longtime best seller is that the major issues of software development are human, not technical. They’re not easy issues; but solve them, and you’ll maximize your chances of success.&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;“&lt;b&gt;Peopleware &lt;/b&gt;has long been one of my two favorite books on software engineering. Its underlying strength is its base of immense real experience, much of it quantified. Many, many varied projects have been reflected on and distilled; but what we are given is not just lifeless distillate, but vivid examples from which we share the authors’ inductions. Their premise is right: most software project problems are sociological, not technological. The insights on team jelling and work environment have changed my thinking and teaching. The third edition adds strength to strength.” &lt;/p&gt;&lt;p&gt;— Frederick P. Brooks, Jr., Kenan Professor of Computer Science, University of North Carolina at Chapel Hill, Author of The Mythical Man-Month and The Design of Design&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;“&lt;b&gt;Peopleware &lt;/b&gt;is the one book that everyone who runs a software team needs to read and reread once a year. In the quarter century since the first edition appeared, it has become more important, not less, to think about the social and human issues in software development. This is the only way we’re going to make more humane, productive workplaces. Buy it, read it, and keep a stock on hand in the office supply closet.” &lt;/p&gt;&lt;p&gt;—Joel Spolsky, Co-founder, Stack Overflow&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;“When a book about a field as volatile as software design and use extends to a third edition, you can be sure that the authors write of deep principle, of the fundamental causes for what we readers experience, and not of the surface that everyone recognizes. And to bring people, actual human beings, into the mix! How excellent. How rare. The authors have made this third edition, with its additions, entirely terrific.” &lt;/p&gt;&lt;p&gt;—Lee Devin and Rob Austin, Co-authors of The Soul of Design and Artful Making&lt;/p&gt;&lt;p&gt; &lt;/p&gt;&lt;p&gt;For this third edition, the authors have added six new chapters and updated the text throughout, bringing it in line with today’s development environments and challenges. For example, the book now discusses pathologies of leadership that hadn’t previously been judged to be pathological; an evolving culture of meetings; hybrid teams made up of people from seemingly incompatible generations; and a growing awareness that some of our most common tools are more like anchors than propellers. Anyone who needs to manage a software project or software organization will find invaluable advice throughout the book.&lt;/p&gt;&lt;/span&gt;</description><pubDate>2013-06-18T00:00:00Z</pubDate></item></channel></rss>